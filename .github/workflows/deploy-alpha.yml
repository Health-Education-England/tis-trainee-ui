name: Deploy DSP Alpha to AWS

on:
  push:
    branches:
      - dsp-alpha
  workflow_dispatch:

jobs:
  deploy-dsp-alpha:
    name: Deploy to DSP Alpha
    environment: alpha
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3.8.0
        with:
          node-version: 16.17.0
          cache: npm

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build React App
        run: npm install && npm run build
        env:
          ENV: preprod

      - name: Get App Version
        run: echo "app_version=$(npm pkg get version | xargs)" >> "$GITHUB_ENV"

      - name: Deploy app build to S3 bucket
        run: |
          mv ./out/[[...app]].html ./out/index.html
          aws s3 sync ./out/ s3://${{ secrets.AWS_S3_BUCKET_DSP_ALPHA }}/${{ env.app_version }} --delete

      - name: Update Cloudfront Origin Path
        run: |
          aws cloudfront get-distribution-config --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} > ${{ env.ORIGINAL_CONFIG_FILENAME }}
          etag=`jq '.ETag' ${{ env.ORIGINAL_CONFIG_FILENAME }} | xargs`
          jq '.DistributionConfig | (.Origins.Items[] | select(.Id | contains("website")).OriginPath) = "/${{ env.app_version }}"' ${{ env.ORIGINAL_CONFIG_FILENAME }} > ${{ env.UPDATED_CONFIG_FILENAME }}
          aws cloudfront update-distribution --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --if-match $etag --distribution-config file://${{ env.UPDATED_CONFIG_FILENAME }}
        env:
          ORIGINAL_CONFIG_FILENAME: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID}}_get.json
          UPDATED_CONFIG_FILENAME: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID}}_update.json
